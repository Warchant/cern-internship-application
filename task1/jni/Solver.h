/* DO NOT EDIT THIS FILE - it is machine generated */
#include <stdint.h>
#include <jni.h>
/* Header for class Solver */

#ifndef _Included_Solver
#define _Included_Solver
#ifdef __cplusplus
extern "C" {
#endif
#undef Solver_MIN_PRIORITY
#define Solver_MIN_PRIORITY 1L
#undef Solver_NORM_PRIORITY
#define Solver_NORM_PRIORITY 5L
#undef Solver_MAX_PRIORITY
#define Solver_MAX_PRIORITY 10L
/*
 * Class:     Solver
 * Method:    solve
 * Signature: ([I)[I
 */
JNIEXPORT jintArray JNICALL Java_Solver_solve (JNIEnv *, jobject, jintArray);

// determines, if number 'element' fits into 'field[row][col]'
bool is_correct(const field_ptr field, int row, int col, int element);

// are there any empty cells?
bool find_unassigned(const field_ptr field, int& row, int &col);

// solve field
bool solve(field_ptr field);

#ifdef __cplusplus
}
#endif
#endif
